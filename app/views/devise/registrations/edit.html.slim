header.page-header
  .container
    h1.page-header__title
      = t('title.edit_user')

.page-body
  .container
    = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
      = render 'devise/shared/error_messages', resource: resource
      .field
        label.label
          = f.label :email
        .control
          = f.email_field :email, autofocus: true, autocomplete: 'email', class: 'input is-small'
        - if devise_mapping.confirmable? && resource.pending_reconfirmation?
          div
            | Currently waiting confirmation for:
            = resource.unconfirmed_email
      .field
        label.label
          = f.label :username
        .control
          = f.text_field :username, autocomplete: 'username', class: 'input is-small'
      .field
        label.label
          = f.label :password
      i
        = t('information.leave_blank_if_not_change')
      .control
        = f.password_field :password, autocomplete: 'new-password', class: 'input is-small'
        - if @minimum_password_length
          br
          em
            = @minimum_password_length
            = t('information.minimum_character')
      .field
        label.label
          = f.label :password_confirmation
        .control
          = f.password_field :password_confirmation, autocomplete: 'new-password', class: 'input is-small'
      .field
        label.label
          = f.label :current_password
        .control
          = f.password_field :current_password, autocomplete: 'current-password', class: 'input is-small'
      .actions
        = f.submit t('button.update'), class: 'button is-primary'
        
    = button_to t('button.cancel_account'), registration_path(resource_name), data: { confirm: t('confirm.destroy') }, method: :delete, class: 'button is-danger'
    = link_to t('button.back'), :back
